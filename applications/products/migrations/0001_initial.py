# Generated by Django 4.1 on 2022-09-14 08:04

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_proceeding', models.BooleanField(default=False, verbose_name='할인 진행중')),
                ('discount_option', models.CharField(choices=[('PD', '기간할인'), ('MD', '회원할인')], default='MD', max_length=5, verbose_name='할인 유형')),
                ('discount_title', models.CharField(max_length=50, verbose_name='할인명')),
                ('discount_start', models.DateTimeField(verbose_name='할인 시작')),
                ('discount_finish', models.DateTimeField(verbose_name='마감 기간')),
                ('discount_target', models.CharField(choices=[('G', 'Gold'), ('S', 'Silver'), ('B', 'Bronze'), ('A', 'All')], default='A', max_length=10, verbose_name='할인적용범위')),
                ('discount_rate', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99)], verbose_name='할인률(정률, %)')),
                ('discount_value', models.PositiveIntegerField(verbose_name='할인액(정액, 원)')),
            ],
            options={
                'verbose_name': '할인 이벤트',
                'db_table': 'discounts',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일자')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일자')),
                ('item_name', models.CharField(max_length=30, verbose_name='상품명')),
                ('item_stock', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)], verbose_name='상품수량')),
                ('item_supply_price', models.PositiveIntegerField(default=0, verbose_name='공급가격')),
                ('item_retail_price', models.PositiveIntegerField(default=0, verbose_name='소비자가')),
                ('item_sale_price', models.PositiveIntegerField(default=0, verbose_name='판매가')),
                ('item_text', models.CharField(max_length=250, verbose_name='상품설명')),
                ('item_content', models.TextField(verbose_name='상세설명')),
                ('is_item_sale', models.BooleanField(default=False, verbose_name='판매여부')),
                ('is_item_discount', models.BooleanField(default=False, verbose_name='할인여부')),
            ],
            options={
                'verbose_name': '단일상품',
                'db_table': 'items',
            },
        ),
        migrations.CreateModel(
            name='ItemOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_name', models.CharField(max_length=30, verbose_name='옵션명')),
                ('option_value', models.CharField(max_length=30, verbose_name='옵션값')),
                ('option_extra_price', models.IntegerField(default=0, verbose_name='옵션 추가금액')),
                ('option_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='option', to='products.item')),
            ],
            options={
                'verbose_name': '아이템 옵션',
                'db_table': 'item_options',
            },
        ),
        migrations.CreateModel(
            name='ItemImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일자')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일자')),
                ('head_image', models.ImageField(blank=True, upload_to='item/item_head_image/%Y/%m', verbose_name='상품 이미지')),
                ('detail_image', models.ImageField(blank=True, upload_to='item/item_detail_image/%Y/%m', verbose_name='상품 상세 이미지')),
                ('image_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image', to='products.item')),
            ],
            options={
                'db_table': 'item_images',
            },
        ),
    ]
